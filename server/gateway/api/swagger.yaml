swagger: "2.0"
info:
  description: "Gateway to Civitas"
  version: "1.0.0"
  title: "Civitas Gateway"
host: "localhost:4000"
basePath: "/v1"
tags:
- name: "gateway"
  description: "Operations related to gateway entity"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /user:
    get:
      tags:
      - "user"
      description: "returns all the user records"
      operationId: "getAllUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: msisdn
        in: "query"
        description: "The msisdn of the user"
        required: false
        type: "string"
        pattern: "^27((60[3-9]|64[0-5])\\d{6}|(7[1-4689]|6[1-3]|8[1-4])\\d{7})$"
        maxLength: 128
      responses:
        200:
          description: "An array of users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/userResponse"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "UserController"
    post:
      tags:
      - "user"
      description: "Creates a user"
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "The user entity details"

        required: true
        schema:
          $ref: "#/definitions/userRequest"
      responses:
        201:
          description: "success response that the user has been added"
          schema:
            $ref: "#/definitions/userResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "UserController"
  /user/{id}:
    put:
      tags:
      - "user"
      description: "Updates a user"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "The id of user entity that will be updated"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "user"
        description: "The user entity details"
        required: true
        schema:
          $ref: "#/definitions/userUpdateRequest"
      responses:
        200:
          description: "A single user"
          schema:
            $ref: "#/definitions/userResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "UserController"
    delete:
        tags:
        - "user"
        description: "Deletes a user"
        operationId: "deleteUser"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - in: "path"
          name: "id"
          description: "The id of user entity that will be deleted"
          required: true
          type: "string"
          format: "uuid"
        responses:
          200:
            description: "An array of users"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/userResponse"
          405:
            description: "Method not supported Error. Returned if an unsupported http\
              \ method is used."
            schema:
              $ref: "#/definitions/clientErrorModel"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/serverErrorModel"
        x-swagger-router-controller: "UserController"
    get:
        tags:
        - "user"
        description: "Returns a user"
        operationId: "getSingleUser"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - in: "path"
          name: "id"
          description: "The id of user entity that will be returned"
          required: true
          type: "string"
          format: "uuid"
        responses:
          200:
            description: "A single user"
            schema:
              $ref: "#/definitions/userResponse"
          405:
            description: "Method not supported Error. Returned if an unsupported http\
              \ method is used."
            schema:
              $ref: "#/definitions/clientErrorModel"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/serverErrorModel"
        x-swagger-router-controller: "UserController"

  /user/{id}/friend:
    post:
      tags:
      - "user"
      description: "Creates a friend for the user"
      operationId: "createFriend"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "The id of user entity"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "friend"
        description: "The user friend entity details"
        required: true
        schema:
          $ref: "#/definitions/friendRequest"
      responses:
        201:
          description: "success response that the user friend has been added"
          schema:
            $ref: "#/definitions/friendResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "FriendController"

  /user/{id}/invite-friend:
    post:
      tags:
      - "user"
      description: "Allows user to invite another user"
      operationId: "inviteFriend"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "The id of user"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "invite"
        description: "The user invitation details"
        required: true
        schema:
          $ref: "#/definitions/inviteFriendRequest"
      responses:
        200:
          description: "success response that the user's invitation has been sent"
          schema:
            $ref: "#/definitions/inviteFriendResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "FriendController"

  /registration/confirm:
    post:
      tags:
      - "registration"
      description: "Confirms a registration"
      operationId: "confirmRegistration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "register"
        description: "The registration details"
        required: true
        schema:
          $ref: "#/definitions/confirmRegistrationRequest"
      responses:
        200:
          description: "success response that the registration has been confirmed"
          schema:
            $ref: "#/definitions/confirmRegistrationResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "RegistrationController"

  /company:
    get:
      tags:
      - "company"
      description: "returns all the company records"
      operationId: "getAllCompanies"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "context"
        in: "header"
        type: "string"
        description: "The executing context"
      - name: "context-id"
        in: "header"
        type: "string"
        description: "The executing context id"
      responses:
        200:
          description: "An array of companies"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/companyResponse"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "CompanyController"

    post:
      tags:
      - "company"
      description: "Creates a company"
      operationId: "createCompany"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "company"
        description: "The company entity details"
        required: true
        schema:
          $ref: "#/definitions/companyRequest"
      - name: "context"
        in: "header"
        type: "string"
        description: "The executing context"
      - name: "context-id"
        in: "header"
        type: "string"
        description: "The executing context id"
      responses:
        201:
          description: "success response that the company has been added"
          schema:
            $ref: "#/definitions/companyResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "CompanyController"

  /company/{id}:
    put:
      tags:
      - "company"
      description: "Updates a company"
      operationId: "updateCompany"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "The id of company entity that will be updated"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "company"
        description: "The company entity details"
        required: true
        schema:
          $ref: "#/definitions/companyUpdateRequest"
      - name: "context"
        in: "header"
        type: "string"
        description: "The executing context"
      - name: "context-id"
        in: "header"
        type: "string"
        description: "The executing context id"
      responses:
        200:
          description: "A single company"
          schema:
            $ref: "#/definitions/companyResponse"
        400:
          description: "Validation Error. Usually caused by a missing or invalid parameter."
          schema:
            $ref: "#/definitions/validationErrorModel"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        406:
          description: "Content type not supported Error. Returned if an unsupported\
            \ content type is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        413:
          description: "Message content too big. Returned if the entity body's size\
            \ is over the allowed limit."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "CompanyController"

    delete:
        tags:
        - "company"
        description: "Deletes a company"
        operationId: "deleteCompany"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - in: "path"
          name: "id"
          description: "The id of company entity that will be deleted"
          required: true
          type: "string"
          format: "uuid"
        - name: "context"
          in: "header"
          type: "string"
          description: "The executing context"
        - name: "context-id"
          in: "header"
          type: "string"
          description: "The executing context id"
        responses:
          200:
            description: "A single company"
            schema:
              $ref: "#/definitions/companyResponse"
          405:
            description: "Method not supported Error. Returned if an unsupported http\
              \ method is used."
            schema:
              $ref: "#/definitions/clientErrorModel"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/serverErrorModel"
        x-swagger-router-controller: "CompanyController"
    get:
        tags:
        - "company"
        description: "Returns a company"
        operationId: "getSingleCompany"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - in: "path"
          name: "id"
          description: "The id of company entity that will be returned"
          required: true
          type: "string"
          format: "uuid"
        - name: "context"
          in: "header"
          type: "string"
          description: "The executing context"
        - name: "context-id"
          in: "header"
          type: "string"
          description: "The executing context id"
        responses:
          200:
            description: "A single company"
            schema:
              $ref: "#/definitions/companyResponse"
          405:
            description: "Method not supported Error. Returned if an unsupported http\
              \ method is used."
            schema:
              $ref: "#/definitions/clientErrorModel"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/serverErrorModel"
        x-swagger-router-controller: "CompanyController"

  /status:
    get:
      tags:
      - "status"
      description: "gets the status of the messaging service"
      operationId: "getSystemStatus"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "The server status will be returned"
          schema:
            $ref: "#/definitions/serverStatusResponse"
        405:
          description: "Method not supported Error. Returned if an unsupported http\
            \ method is used."
          schema:
            $ref: "#/definitions/clientErrorModel"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/serverErrorModel"
      x-swagger-router-controller: "StatusController"

definitions:
  userRequest:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "msisdn"
    - "addresses"
    additionalProperties: false
    properties:
      firstName:
        type: "string"
        maxLength: 128
        description: "The firstname of the user"
      lastName:
        type: "string"
        maxLength: 128
        description: "The lastname of the user"
      msisdn:
        type: "string"
        pattern: "^27((60[3-9]|64[0-5])\\d{6}|(7[1-4689]|6[1-3]|8[1-4])\\d{7})$"
        maxLength: 128
        description: "The user's msisdn number"
        #Ref: http://wa.rwick.com/2016/06/09/validating-south-african-cell-numbers-with-a-regular-expression-regex/
      email:
        type: "string"
        format: "email"
        minLength: 6
        maxLength: 128
        description: "The email of the user"
      addresses:
        type: array
        items:
          $ref: "#/definitions/addressRequest"
      arCompanies:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the AR companies that service the user"
      images:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the images on user's phone that are linked to his or her profile"
      avatarId:
        type: "string"
        format: "uuid"
        description: "The id of user's avatar image"

  userResponse:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "msisdn"
    properties:
      firstName:
        type: "string"
        maxLength: 128
        description: "The firstname of the user"
      lastName:
        type: "string"
        maxLength: 128
        description: "The lastname of the user"
      msisdn:
        type: "string"
        pattern: "^27((60[3-9]|64[0-5])\\d{6}|(7[1-4689]|6[1-3]|8[1-4])\\d{7})$"
        maxLength: 128
        description: "The user's msisdn"
      email:
        type: "string"
        format: "email"
        minLength: 6
        maxLength: 128
      addresses:
        type: array
        items:
          $ref: "#/definitions/addressResponse"
      arCompanies:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the AR companies that service the user"
      friends:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the user's friends"
      images:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the images on user's phone that are linked to his or her profile"
      avatarId:
        type: "string"
        format: "uuid"
        description: "The id of user's avatar image"
      status:
        type: "string"
        enum: ["active", "inactive"]
        description: "The firstname of the user"
      createdAt:
        type: "string"
        description: "The created date"
      updatedAt:
        type: "string"
        description: "The updated date"

  userUpdateRequest:
    type: "object"
    additionalProperties: false
    properties:
      firstName:
        type: "string"
        maxLength: 128
        description: "The firstname of the user"
      lastName:
        type: "string"
        maxLength: 128
        description: "The lastname of the user"
      email:
        type: "string"
        format: "email"
        minLength: 6
        maxLength: 128
        description: "The email of the user"
      addresses:
        type: array
        items:
          $ref: "#/definitions/addressRequest"
      arCompanies:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the AR companies that service the user"
      images:
        type: "array"
        items:
          type: "string"
          format: "uuid"
        description: "The ids of the images on user's phone that are linked to his or her profile"
      avatarId:
        type: "string"
        format: "uuid"
        description: "The id of user's avatar image"

  friendRequest:
    type: "object"
    additionalProperties: false
    required:
    - "numbers"
    properties:
      numbers:
        type: "array"
        items:
          type: "string"
          pattern: "^27((60[3-9]|64[0-5])\\d{6}|(7[1-4689]|6[1-3]|8[1-4])\\d{7})$"
          maxLength: 128
          description: "The msisdn of user's friend"

  friendResponse:
    type: "object"
    required:
    - "msisdn"
    - "userId"
    properties:
      msisdn:
        type: "string"
        description: "The msisdn of user's friend"
      userId:
        type: "string"
        description: "The id of the user"
        format: "uuid"

  confirmRegistrationRequest:
    type: "object"
    additionalProperties: false
    required:
    - "code"
    - "msisdn"
    properties:
      code:
        type: "string"
        description: "The registration confirmation code sent to the device"
      msisdn:
        type: "string"
        description: "The cell number to which the registration code was sent"

  confirmRegistrationResponse:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The registration confirmation code sent to the device"
      msisdn:
        type: "string"
        description: "The cell number to which the registration code was sent"

  inviteFriendRequest:
    additionalProperties: false
    type: "object"
    required:
    - "msisdn"
    properties:
      msisdn:
        type: "string"
        pattern: "^27((60[3-9]|64[0-5])\\d{6}|(7[1-4689]|6[1-3]|8[1-4])\\d{7})$"
        maxLength: 128
        description: "The invited user's contact number"

  inviteFriendResponse:
    type: "object"
    required:
    - "msisdn"
    - "userId"
    properties:
      msisdn:
        type: "string"
        description: "The invited user's contact number"
      userId:
        type: "string"
        description: "The id of the user"

  addressRequest:
    additionalProperties: false
    type: "object"
    required:
    - "isPrimary"
    properties:
      detail:
        $ref: "#/definitions/addressDetail"
      location:
        $ref: "#/definitions/location"
      isPrimary:
        type: "boolean"
        description: "Indicates if this is the primary address"

  addressResponse:
    type: "object"
    properties:
      detail:
        $ref: "#/definitions/addressDetail"
      location:
        $ref: "#/definitions/location"
      isPrimary:
        type: "boolean"
        description: "Indicates if this is the primary address"
      createdAt:
        type: "string"
        description: "The created date"
      updatedAt:
        type: "string"
        description: "The updated date"

  phoneNumberRequest:
    additionalProperties: false
    type: "object"
    required:
    - "type"
    - "number"
    properties:
      number:
        type: "string"
        description: "The user's phone number"
      type:
        type: "string"
        enum: ["personal", "business", "home"]
        description: "The type of the landline number"
      isPrimary:
        type: "boolean"
        description: "Indicates if this is the primary phone number"

  phoneNumberResponse:
    type: "object"
    required:
    - "type"
    - "number"
    properties:
      number:
        type: "string"
        description: "The user's phone number"
      type:
        type: "string"
        enum: ["personal", "business", "home"]
        description: "The type of the landline number"
      isPrimary:
        type: "boolean"
        description: "Indicates if this is the primary phone number"

  companyRequest:
    additionalProperties: false
    type: "object"
    required:
    - "name"
    - "addresses"
    - "phoneNumbers"
    - "branch"
    properties:
      name:
        type: "string"
        description: "The name of the company"
      branch:
        type: "string"
        description: "The name of the branch"
      type:
        type: "string"
        enum: ["user", "es", "ar"]
        description: "The type of the company"
      addresses:
        type: array
        items:
          $ref: "#/definitions/addressRequest"
      phoneNumbers:
        type: array
        items:
          $ref: "#/definitions/phoneNumberRequest"
      representative:
        type: array
        items:
          $ref: "#/definitions/personRequest"

  companyUpdateRequest:
    additionalProperties: false
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the company"
      branch:
        type: "string"
        description: "The name of the branch"
      type:
        type: "string"
        enum: ["user", "es", "ar"]
        description: "The type of the company"
      addresses:
        type: array
        items:
          $ref: "#/definitions/addressRequest"
      phoneNumbers:
        type: array
        items:
          $ref: "#/definitions/phoneNumberRequest"
      representative:
        type: array
        items:
          $ref: "#/definitions/personRequest"

  companyResponse:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the company"
      branch:
        type: "string"
        description: "The name of the branch"
      type:
        type: "string"
        enum: ["user", "es", "ar"]
        description: "The type of the company"
      addresses:
        type: array
        items:
          $ref: "#/definitions/addressResponse"
      phoneNumbers:
        type: array
        items:
          $ref: "#/definitions/phoneNumberResponse"
      representative:
        type: array
        items:
          $ref: "#/definitions/personResponse"

  personRequest:
    additionalProperties: false
    type: "object"
    required:
    - "name"
    - "phoneNumbers"
    properties:
      name:
        type: "string"
        description: "The name of the person"
      email:
        type: "string"
        format: "email"
        minLength: 6
        maxLength: 128
      phoneNumbers:
        type: array
        items:
          $ref: "#/definitions/phoneNumberRequest"

  personResponse:
    additionalProperties: false
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the person"
      email:
        type: "string"
        format: "email"
        minLength: 6
        maxLength: 128
      phoneNumbers:
        type: array
        items:
          $ref: "#/definitions/phoneNumberResponse"

  addressDetail:
    additionalProperties: false
    type: "object"
    required:
    - "line1"
    - "city"
    - "country"
    - "postalCode"
    - "type"
    properties:
      line1:
        type: "string"
        maxLength: 128
        description: "The first line of address"
      line2:
        type: "string"
        maxLength: 128
        description: "The second line of address"
      city:
        type: "string"
        maxLength: 128
        description: "The city"
      state:
        type: "string"
        maxLength: 128
        description: "The state"
      province:
        type: "string"
        maxLength: 128
        description: "The province"
      country:
        type: "string"
        maxLength: 128
        description: "The country"
      postalCode:
        type: "string"
        maxLength: 128
        description: "The postal code"
      type:
        type: "string"
        enum: ["physical", "postal"]
        description: "The type of the address"

  location:
    additionalProperties: false
    type: "object"
    required:
    - "type"
    - "coordinates"
    properties:
      coordinates:
        type: "array"
        items:
          type: "integer"
          description: "The ids of the AR companies that service the user"
      type:
        type: "string"
        enum: ["Point"]
        description: "The longitude and latitude of the location"

  serverStatusResponse:
    type: "object"
    required:
    - "up_time"
    properties:
      up_time:
        type: "number"
        format: "double"

  serverErrorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      stack:
        type: "string"

  clientErrorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      stack:
        type: "string"

  validationErrorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      errors:
        type: "array"
        items:
          $ref: "#/definitions/validationErrorSingleModel"
  validationErrorSingleModel:
    type: "object"
    required:
    - "code"
    - "message"
    - "path"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      path:
        type: "array"
        items:
          type: "string"
      description:
        type: "string"